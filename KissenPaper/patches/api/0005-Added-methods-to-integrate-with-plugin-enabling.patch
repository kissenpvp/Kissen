From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Groldi <chniucg@gmail.com>
Date: Wed, 20 Sep 2023 20:35:37 +0200
Subject: [PATCH] Added methods to integrate with plugin enabling

New methods were added to handle different plugin states(load, enable, disable) and facilitate the translation registration process. This is part of the integration and broadening functionalities of the Kissen Plugin.
The Plugin API now extends KissenPlugin enabling further access to plugin methods. This change allows plugins to be handled in a more nuanced way, improving the overall plugin management system.

diff --git a/src/main/java/org/bukkit/plugin/Plugin.java b/src/main/java/org/bukkit/plugin/Plugin.java
index 4eb639fbb46a0848be207149ea433455550fae1c..5526f527d85e25070e6d3c335bc313fadceef753 100644
--- a/src/main/java/org/bukkit/plugin/Plugin.java
+++ b/src/main/java/org/bukkit/plugin/Plugin.java
@@ -16,7 +16,7 @@ import org.jetbrains.annotations.Nullable;
  * <p>
  * The use of {@link PluginBase} is recommended for actual Implementation
  */
-public interface Plugin extends TabExecutor {
+public interface Plugin extends TabExecutor, net.kissenpvp.core.api.base.plugin.KissenPlugin { // KissenPaper
     /**
      * Returns the folder that the plugin data's files are located in. The
      * folder may not yet exist.
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPlugin.java b/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
index 5cd236965de12392d8c7aa81307c0ff1cc8673b1..73a253f24ef83ec7b07f022c9f935c0c68fdacec 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPlugin.java
@@ -456,4 +456,16 @@ public abstract class JavaPlugin extends PluginBase {
         }
         return plugin;
     }
+
+    // KissenPaper start
+    @Override
+    public @NotNull net.kissenpvp.core.api.base.Kissen getKissen() {
+        return org.bukkit.Bukkit.getKissen();
+    }
+
+    @Override
+    public void registerTranslation(@NotNull String key, @NotNull java.text.MessageFormat translationTemplate) {
+        getKissen().getImplementation(net.kissenpvp.core.api.message.localization.LocalizationImplementation.class).register(this, key, translationTemplate);
+    }
+    // KissenPaper end
 }
diff --git a/src/test/java/org/bukkit/plugin/TestPlugin.java b/src/test/java/org/bukkit/plugin/TestPlugin.java
index 43b58e920e739bb949ac0673e9ef73ba7b500dc9..34409ff551561308710109b9855bd64a8f662a30 100644
--- a/src/test/java/org/bukkit/plugin/TestPlugin.java
+++ b/src/test/java/org/bukkit/plugin/TestPlugin.java
@@ -133,4 +133,24 @@ public class TestPlugin extends PluginBase {
     public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
         throw new UnsupportedOperationException("Not supported.");
     }
+
+    @Override
+    public @org.jetbrains.annotations.NotNull String getFullName() {
+        return getName();
+    }
+
+    @Override
+    public @org.jetbrains.annotations.NotNull String getPackage() {
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    @Override
+    public net.kissenpvp.core.api.base.@org.jetbrains.annotations.NotNull Kissen getKissen() {
+        return org.bukkit.Bukkit.getKissen();
+    }
+
+    @Override
+    public void registerTranslation(@org.jetbrains.annotations.NotNull String key, java.text.@org.jetbrains.annotations.NotNull MessageFormat defaultMessage) {
+        throw new UnsupportedOperationException("Not supported.");
+    }
 }
