From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Groldi <chniucg@gmail.com>
Date: Sun, 13 Aug 2023 02:52:51 +0200
Subject: [PATCH] Reworked entity system and worked on implementing the ban
 system.


diff --git a/src/main/java/net/kissenpvp/paper/api/ban/PaperBan.java b/src/main/java/net/kissenpvp/paper/api/ban/PaperBan.java
new file mode 100644
index 0000000000000000000000000000000000000000..23def43127810bfdefbb63c949a319b46ebc59a0
--- /dev/null
+++ b/src/main/java/net/kissenpvp/paper/api/ban/PaperBan.java
@@ -0,0 +1,5 @@
+package net.kissenpvp.paper.api.ban;
+
+import net.kissenpvp.core.api.ban.Ban;
+
+public interface PaperBan extends Ban {}
diff --git a/src/main/java/net/kissenpvp/paper/api/ban/PaperBanImplementation.java b/src/main/java/net/kissenpvp/paper/api/ban/PaperBanImplementation.java
index 1b5fe5b8c553b5cec22d98ebe553060ff95e9d28..99e68450c9ccbe4059cfe1c626530a96d2e37fe0 100644
--- a/src/main/java/net/kissenpvp/paper/api/ban/PaperBanImplementation.java
+++ b/src/main/java/net/kissenpvp/paper/api/ban/PaperBanImplementation.java
@@ -16,11 +16,11 @@
 
 package net.kissenpvp.paper.api.ban;
 
-import net.kissenpvp.core.api.ban.Ban;
-import net.kissenpvp.core.api.ban.BanImplementation;
-import net.kissenpvp.core.api.ban.BanType;
-import net.kissenpvp.core.api.ban.PlayerBan;
+import net.kissenpvp.core.api.ban.*;
+import net.kissenpvp.core.api.database.meta.BackendException;
+import net.kissenpvp.core.api.networking.client.entitiy.PlayerClient;
 import net.kissenpvp.paper.api.base.Context;
+import net.kyori.adventure.text.Component;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 import org.jetbrains.annotations.Unmodifiable;
@@ -30,15 +30,15 @@ import java.util.Set;
 import java.util.UUID;
 
 
-public interface PaperBanImplementation extends BanImplementation
+public interface PaperBanImplementation extends BanImplementation<PaperBan, PaperPunishment>
 {
-    @NotNull @Unmodifiable Set<PlayerBan> getPlayerBanSet(@NotNull Context context);
+    @NotNull @Unmodifiable Set<PaperPunishment> getPlayerBanSet(@NotNull Context context) throws BackendException;
 
-    @NotNull @Unmodifiable Set<PlayerBan> getPlayerBanSet(@NotNull UUID totalID, @NotNull Context context);
+    @NotNull @Unmodifiable Set<PaperPunishment> getPlayerBanSet(@NotNull UUID totalID, @NotNull Context context) throws BackendException;
 
-    @NotNull Optional<@Nullable PlayerBan> getCurrentBan(@NotNull UUID totalID, Context context);
+    @NotNull Optional<@Nullable PaperPunishment> getCurrentBan(@NotNull UUID totalID, Context context) throws BackendException;
 
-    @NotNull Optional<@Nullable PlayerBan> getCurrentBan(@NotNull UUID totalID, @NotNull BanType banType, Context context);
+    @NotNull Optional<@Nullable PaperPunishment> getCurrentBan(@NotNull UUID totalID, @NotNull BanType banType, Context context) throws BackendException;
 
-    @NotNull PlayerBan ban(@NotNull UUID totalID, @NotNull Ban ban, @NotNull String banner, @Nullable String reason, @NotNull Context context);
+    @NotNull PaperPunishment ban(@NotNull UUID totalID, @NotNull PaperBan ban, @NotNull BanOperator banOperator, @Nullable Component reason, @NotNull Context context) throws BackendException;
 }
diff --git a/src/main/java/net/kissenpvp/paper/api/ban/PaperPunishment.java b/src/main/java/net/kissenpvp/paper/api/ban/PaperPunishment.java
new file mode 100644
index 0000000000000000000000000000000000000000..e0da95de26c676b014046f1300ee6141a92a811f
--- /dev/null
+++ b/src/main/java/net/kissenpvp/paper/api/ban/PaperPunishment.java
@@ -0,0 +1,6 @@
+package net.kissenpvp.paper.api.ban;
+
+import net.kissenpvp.core.api.ban.Punishment;
+import org.bukkit.entity.Player;
+
+public interface PaperPunishment extends Punishment<Player> {}
diff --git a/src/main/java/net/kissenpvp/paper/api/command/KissenCommand.java b/src/main/java/net/kissenpvp/paper/api/command/KissenCommand.java
index 91c0ef1bec76480ca2ed4f50a30d4b767ad3c02d..3e193c2e5ce41c57f069b7ab0f2812c13e5f47da 100644
--- a/src/main/java/net/kissenpvp/paper/api/command/KissenCommand.java
+++ b/src/main/java/net/kissenpvp/paper/api/command/KissenCommand.java
@@ -1,6 +1,10 @@
 package net.kissenpvp.paper.api.command;
 
+import net.kissenpvp.core.api.command.annotations.CommandData;
+import net.kissenpvp.core.api.command.executor.CommandExecutor;
+import net.kissenpvp.core.api.command.executor.TabCompleterExecutor;
 import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
 import org.jetbrains.annotations.NotNull;
 
 /**
@@ -29,4 +33,9 @@ public abstract class KissenCommand extends Command {
     protected KissenCommand(@NotNull String name) {
         super(name);
     }
+
+    public abstract void initCommand(@NotNull CommandData commandData, @NotNull CommandExecutor<CommandSender> commandExecutor);
+
+    public abstract void initCompleter(@NotNull TabCompleterExecutor<CommandSender> completerExecutor);
+
 }
diff --git a/src/main/java/net/kissenpvp/paper/api/command/PaperArgumentParser.java b/src/main/java/net/kissenpvp/paper/api/command/PaperArgumentParser.java
new file mode 100644
index 0000000000000000000000000000000000000000..c46687844179d89afefa395d64e820ba79313403
--- /dev/null
+++ b/src/main/java/net/kissenpvp/paper/api/command/PaperArgumentParser.java
@@ -0,0 +1,7 @@
+package net.kissenpvp.paper.api.command;
+
+import net.kissenpvp.core.api.command.ArgumentParser;
+import org.bukkit.command.CommandSender;
+
+public interface PaperArgumentParser<T> extends ArgumentParser<T, CommandSender> {
+}
diff --git a/src/main/java/net/kissenpvp/paper/api/command/PaperCommandImplementation.java b/src/main/java/net/kissenpvp/paper/api/command/PaperCommandImplementation.java
index 528a26682506b24ed2e3c57c63fce70422521d29..e582dd12e88ef91e3589dbc4310773a4eab16d86 100644
--- a/src/main/java/net/kissenpvp/paper/api/command/PaperCommandImplementation.java
+++ b/src/main/java/net/kissenpvp/paper/api/command/PaperCommandImplementation.java
@@ -55,4 +55,6 @@ public interface PaperCommandImplementation extends Implementation {
      */
     boolean unregisterCommand(@NotNull String name);
 
+    <T> void registerParser(@NotNull Class<T> type, @NotNull PaperArgumentParser<T> argumentParser);
+
 }
diff --git a/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperOnlinePlayerClient.java b/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperOnlinePlayerClient.java
index 029ad22e676c84e2ce3400a35e6326e0b57acdac..d964712ffe0db2fa32ed7d7958dc5b5e3f763a4d 100644
--- a/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperOnlinePlayerClient.java
+++ b/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperOnlinePlayerClient.java
@@ -1,10 +1,14 @@
 package net.kissenpvp.paper.api.networking.client.entity;
 
 import net.kissenpvp.core.api.ban.Ban;
+import net.kissenpvp.core.api.networking.client.entitiy.OnlinePlayerClient;
 import net.kissenpvp.core.api.networking.client.entitiy.ServerEntity;
+import net.kissenpvp.paper.api.ban.PaperPunishment;
+import net.kissenpvp.paper.api.permission.PaperPermission;
+import net.kissenpvp.paper.api.user.rank.PaperPlayerRank;
 import org.jetbrains.annotations.NotNull;
 
-public interface PaperOnlinePlayerClient {
+public interface PaperOnlinePlayerClient extends OnlinePlayerClient<PaperPermission, PaperPlayerRank, PaperPunishment> {
 
     int warn(@NotNull Ban ban, @NotNull ServerEntity warnOperator);
 }
diff --git a/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperPlayerClient.java b/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperPlayerClient.java
index f66ff9517130eb9b01b2ee104a498ebe49757989..f9aa3613e48904202cd3b2a15d8f45b9f5a4b282 100644
--- a/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperPlayerClient.java
+++ b/src/main/java/net/kissenpvp/paper/api/networking/client/entity/PaperPlayerClient.java
@@ -17,13 +17,18 @@
 package net.kissenpvp.paper.api.networking.client.entity;
 
 import net.kissenpvp.core.api.ban.Ban;
-import net.kissenpvp.core.api.ban.PlayerBan;
+import net.kissenpvp.core.api.ban.Punishment;
+import net.kissenpvp.core.api.networking.client.entitiy.PlayerClient;
 import net.kissenpvp.core.api.networking.client.entitiy.ServerEntity;
 import net.kissenpvp.core.api.user.User;
 import net.kissenpvp.core.api.user.suffix.Suffix;
+import net.kissenpvp.paper.api.ban.PaperPunishment;
 import net.kissenpvp.paper.api.base.Context;
+import net.kissenpvp.paper.api.permission.PaperGroubablePermissionEntry;
 import net.kissenpvp.paper.api.permission.PaperPermissible;
+import net.kissenpvp.paper.api.permission.PaperPermission;
 import net.kissenpvp.paper.api.permission.PermissibleOverriddenException;
+import net.kissenpvp.paper.api.user.rank.PaperPlayerRank;
 import net.kyori.adventure.text.Component;
 import org.bukkit.permissions.Permissible;
 import org.jetbrains.annotations.NotNull;
@@ -34,7 +39,7 @@ import java.util.Optional;
 import java.util.Set;
 
 
-public interface PaperPlayerClient extends Permissible {
+public interface PaperPlayerClient extends PlayerClient<PaperPermission, PaperPlayerRank, PaperPunishment>, Permissible, PaperGroubablePermissionEntry {
 
     @NotNull @Unmodifiable Set<@NotNull PaperOnlinePlayerClient> getOnlineAltAccounts();
 
@@ -53,10 +58,6 @@ public interface PaperPlayerClient extends Permissible {
 
     long getLastPlayed(@NotNull Context context);
 
-    @NotNull PlayerBan ban(@NotNull Ban ban, @NotNull ServerEntity banOperator, @NotNull Context context);
-
-    @NotNull PlayerBan ban(@NotNull Ban ban, @NotNull ServerEntity banOperator, @Nullable Component reason, @NotNull Context context);
-
     @NotNull User getUser(@NotNull Context context);
 
     @NotNull PaperPermissible getPermissible() throws PermissibleOverriddenException;
diff --git a/src/main/java/org/bukkit/OfflinePlayer.java b/src/main/java/org/bukkit/OfflinePlayer.java
index 23e38ba9b6ca03e83a254f0ec767eb923aa81c9c..206974bfc84eb5dfcd02ebb60d34c1ce22ad5d85 100644
--- a/src/main/java/org/bukkit/OfflinePlayer.java
+++ b/src/main/java/org/bukkit/OfflinePlayer.java
@@ -6,6 +6,7 @@ import java.util.Date;
 import java.util.UUID;
 
 import net.kissenpvp.core.api.networking.client.entitiy.PlayerClient;
+import net.kissenpvp.paper.api.ban.PaperPunishment;
 import net.kissenpvp.paper.api.networking.client.entity.PaperPlayerClient;
 import net.kissenpvp.paper.api.user.rank.PaperPlayerRank;
 import org.bukkit.ban.ProfileBanList;
@@ -23,7 +24,7 @@ import org.jetbrains.annotations.Nullable;
  * player that is stored on the disk and can, thus, be retrieved without the
  * player needing to be online.
  */
-public interface OfflinePlayer extends ServerOperator, AnimalTamer, ConfigurationSerializable, /* KissenPaper */ PaperPlayerClient, PlayerClient<PaperPlayerRank> {
+public interface OfflinePlayer extends ServerOperator, AnimalTamer, ConfigurationSerializable, /* KissenPaper */ PaperPlayerClient {
 
     /**
      * Checks if this player is currently online
@@ -41,8 +42,7 @@ public interface OfflinePlayer extends ServerOperator, AnimalTamer, Configuratio
      * @return Player name or null if we have not seen a name for this player yet
      */
     @Override
-    @Nullable
-    public String getName();
+    public @NotNull String getName();
 
     /**
      * Returns the UUID of this player
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index e0cc1f8bf1a88e13721a71d0e693a10c6459e45e..37fc831da8a729037b2c3c84ad75fc48d24c1bd5 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -39,7 +39,7 @@ import java.util.Map;
 /**
  * Represents a player, connected or not
  */
-public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginMessageRecipient, net.kyori.adventure.identity.Identified, net.kyori.adventure.bossbar.BossBarViewer, com.destroystokyo.paper.network.NetworkClient, /* KissenPaper */ PaperOnlinePlayerClient, MessageReceiver { // Paper
+public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginMessageRecipient, net.kyori.adventure.identity.Identified, net.kyori.adventure.bossbar.BossBarViewer, com.destroystokyo.paper.network.NetworkClient, /* KissenPaper */ PaperOnlinePlayerClient { // Paper
 
     // Paper start
     @Override
