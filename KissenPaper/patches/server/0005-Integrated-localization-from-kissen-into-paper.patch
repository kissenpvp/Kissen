From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Groldi <chniucg@gmail.com>
Date: Sun, 24 Sep 2023 13:28:51 +0200
Subject: [PATCH] Integrated localization from kissen into paper


diff --git a/src/main/java/net/kissenpvp/paper/message/localization/KissenPaperLocalizationImplementation.java b/src/main/java/net/kissenpvp/paper/message/localization/KissenPaperLocalizationImplementation.java
new file mode 100644
index 0000000000000000000000000000000000000000..40392c8b5f129106015ab5b49dc8764ae72387df
--- /dev/null
+++ b/src/main/java/net/kissenpvp/paper/message/localization/KissenPaperLocalizationImplementation.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2023 KissenPvP
+ *
+ * This program is licensed under the Apache License, Version 2.0.
+ *
+ * This software may be redistributed and/or modified under the terms
+ * of the Apache License as published by the Apache Software Foundation,
+ * either version 2 of the License, or (at your option) any later version.
+ *
+ * This program is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
+ * OR CONDITIONS OF ANY KIND, either express or implied. See the Apache
+ * License, Version 2.0 for the specific language governing permissions
+ * and limitations under the License.
+ *
+ * You should have received a copy of the Apache License, Version 2.0
+ * along with this program. If not, see <http://www.apache.org/licenses/LICENSE-2.0>.
+ */
+
+package net.kissenpvp.paper.message.localization;
+
+import net.kissenpvp.core.message.KissenComponentSerializer;
+import net.kissenpvp.core.message.localization.KissenLocalizationImplementation;
+import net.kyori.adventure.text.Component;
+
+import java.text.MessageFormat;
+
+public class KissenPaperLocalizationImplementation extends KissenLocalizationImplementation {
+
+    @Override
+    public boolean postStart() {
+
+        //I love disconnect messages
+        register("server.disconnect.server-shutdown", getTranslation("multiplayer.disconnect.server_shutdown"));
+        register("server.disconnect.not-whitelisted", getTranslation("multiplayer.disconnect.not_whitelisted"));
+        register("server.disconnect.server-full", getTranslation("multiplayer.disconnect.server_full"));
+        register("server.disconnect.outdated-client", getTranslation("multiplayer.disconnect.outdated_client"));
+        register("server.disconnect.outdated-server", getTranslation("multiplayer.disconnect.outdated_server"));
+        register("server.disconnect.server-restart", getTranslation("multiplayer.disconnect.server_shutdown"));
+
+        register("paper.kick.connection-throttle", new MessageFormat("Connection throttled! Please wait before reconnecting."));
+        register("paper.unauthorized", new MessageFormat("You do not have the permission to perform this command."));
+
+        return super.postStart();
+    }
+
+    /**
+     * Retrieves a translated message format based on the provided language key.
+     *
+     * @param languageKey the string representing the language key for the translation
+     * @return the translated message format
+     */
+    private MessageFormat getTranslation(String languageKey) {
+        return new MessageFormat(KissenComponentSerializer.getInstance()
+                .getMiniSerializer()
+                .serialize(Component.translatable(languageKey)));
+    }
+}
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 4771748712fdb7270f0a9872af88402a96821ced..cec511973c0f1612042cc921965fa78997258088 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2061,6 +2061,7 @@ public class ServerPlayer extends Player {
     }
     public void updateOptionsNoEvents(ClientInformation clientOptions) {
         // Paper end
+        updateLocale(clientOptions.language()); // KissenPaper
         this.language = clientOptions.language();
         this.adventure$locale = net.kyori.adventure.translation.Translator.parseLocale(this.language); // Paper
         this.requestedViewDistance = clientOptions.viewDistance();
@@ -2659,4 +2660,12 @@ public class ServerPlayer extends Player {
         return (CraftPlayer) super.getBukkitEntity();
     }
     // CraftBukkit end
+
+    // KissenPaper start
+    public void updateLocale(@org.jetbrains.annotations.NotNull String locale)
+    {
+        getBukkitEntity().getUser().set("locale", locale);
+    }
+    // KissenPaper end
+
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index a88ea78714a1a0ba120928edb2290ff6491f33d5..b853623e5e596ad2864af9fdc0ce0dc475e61184 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3143,7 +3143,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     @Override
     public void openBook(final net.kyori.adventure.inventory.Book book) {
-        final java.util.Locale locale = this.getHandle().adventure$locale;
+        final java.util.Locale locale = getCurrentLocale(); //this.getHandle().adventure$locale; // KissenPaper
         final net.minecraft.world.item.ItemStack item = io.papermc.paper.adventure.PaperAdventure.asItemStack(book, locale);
         final ServerPlayer player = this.getHandle();
         final ServerGamePacketListenerImpl connection = player.connection;
