From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Groldi <chniucg@gmail.com>
Date: Mon, 11 Sep 2023 00:48:45 +0200
Subject: [PATCH] Integrated base and plugin system into paper


diff --git a/src/main/java/net/kissenpvp/pulvinar/api/base/Context.java b/src/main/java/net/kissenpvp/pulvinar/api/base/Context.java
new file mode 100644
index 0000000000000000000000000000000000000000..13fae9d695e3a80835414d00b06475b2e875c54a
--- /dev/null
+++ b/src/main/java/net/kissenpvp/pulvinar/api/base/Context.java
@@ -0,0 +1,27 @@
+/*
+ * Copyright (C) 2023 KissenPvP
+ *
+ * This program is licensed under the Apache License, Version 2.0.
+ *
+ * This software may be redistributed and/or modified under the terms
+ * of the Apache License as published by the Apache Software Foundation,
+ * either version 2 of the License, or (at your option) any later version.
+ *
+ * This program is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
+ * OR CONDITIONS OF ANY KIND, either express or implied. See the Apache
+ * License, Version 2.0 for the specific language governing permissions
+ * and limitations under the License.
+ *
+ * You should have received a copy of the Apache License, Version 2.0
+ * along with this program. If not, see <http://www.apache.org/licenses/LICENSE-2.0>.
+ */
+
+package net.kissenpvp.pulvinar.api.base;
+
+import java.io.Serializable;
+
+public enum Context implements Serializable
+{
+    LOCAL,
+    GLOBAL
+}
diff --git a/src/main/java/net/kissenpvp/pulvinar/api/base/Pulvinar.java b/src/main/java/net/kissenpvp/pulvinar/api/base/Pulvinar.java
new file mode 100644
index 0000000000000000000000000000000000000000..099bcd659c017047deda6cf67aa31a4fc6ecc911
--- /dev/null
+++ b/src/main/java/net/kissenpvp/pulvinar/api/base/Pulvinar.java
@@ -0,0 +1,6 @@
+package net.kissenpvp.pulvinar.api.base;
+
+import net.kissenpvp.core.api.base.Kissen;
+
+public interface Pulvinar extends Kissen {
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 0430e8238609336a4fa0bd220a7c44f6af264945..618d8f49fc2873ee92cf5ace885b971c0ffabdee 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -3030,4 +3030,17 @@ public final class Bukkit {
         server.clearBlockHighlights();
     }
     // Purpur end
+
+    // Pulvinar start
+    private static net.kissenpvp.pulvinar.api.base.Pulvinar pulvinar;
+    public static @org.jetbrains.annotations.NotNull net.kissenpvp.pulvinar.api.base.Pulvinar getPulvinar() {
+        return pulvinar;
+    }
+    public static void setPulvinar(@NotNull net.kissenpvp.pulvinar.api.base.Pulvinar pulvinar) {
+        if (Bukkit.pulvinar != null) {
+            throw new UnsupportedOperationException("Cannot redefine singleton Kissen");
+        }
+        Bukkit.pulvinar = pulvinar;
+    }
+    // Pulvinar end
 }
diff --git a/src/main/java/org/bukkit/plugin/Plugin.java b/src/main/java/org/bukkit/plugin/Plugin.java
index ef431219fd2bce48bad63b6b92c99d54348d480e..e2efae7fdcc7030b5fba0a2d6733c4095b208394 100644
--- a/src/main/java/org/bukkit/plugin/Plugin.java
+++ b/src/main/java/org/bukkit/plugin/Plugin.java
@@ -16,7 +16,7 @@ import org.jetbrains.annotations.Nullable;
  * <p>
  * The use of {@link PluginBase} is recommended for actual Implementation
  */
-public interface Plugin extends TabExecutor, io.papermc.paper.plugin.lifecycle.event.LifecycleEventOwner { // Paper
+public interface Plugin extends TabExecutor, io.papermc.paper.plugin.lifecycle.event.LifecycleEventOwner, net.kissenpvp.core.api.base.plugin.KissenPlugin { // Paper  // Pulvinar
     /**
      * Returns the folder that the plugin data's files are located in. The
      * folder may not yet exist.
diff --git a/src/main/java/org/bukkit/plugin/PluginManager.java b/src/main/java/org/bukkit/plugin/PluginManager.java
index 47153dee66782a00b980ecf15e8774ab6f3d887d..7eda2d7931eb6f2ed542a1ff6b04d4b5e2e48414 100644
--- a/src/main/java/org/bukkit/plugin/PluginManager.java
+++ b/src/main/java/org/bukkit/plugin/PluginManager.java
@@ -326,4 +326,11 @@ public interface PluginManager extends io.papermc.paper.plugin.PermissionManager
     @org.jetbrains.annotations.ApiStatus.Experimental
     void overridePermissionManager(@NotNull Plugin plugin, @Nullable io.papermc.paper.plugin.PermissionManager permissionManager);
     // Paper end
+
+    // Pulvinar start
+
+    void registerSetting(@NotNull net.kissenpvp.core.api.config.Option<?, ?> setting, @NotNull Plugin plugin);
+
+    // Pulvinar end
+
 }
diff --git a/src/main/java/org/bukkit/plugin/SimplePluginManager.java b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
index 003bece642b682985625db93cad93026352bfc66..e23acd9631468b01bdeac74322e38a938744a573 100644
--- a/src/main/java/org/bukkit/plugin/SimplePluginManager.java
+++ b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
@@ -991,4 +991,14 @@ public final class SimplePluginManager implements PluginManager {
         this.paperPluginManager.addPermissions(perm);
     }
     // Paper end
+
+    // Pulvinar start
+
+    @Override
+    public void registerSetting(@NotNull net.kissenpvp.core.api.config.Option<?, ?> setting, @NotNull Plugin plugin)
+    {
+        org.bukkit.Bukkit.getPulvinar().getImplementation(net.kissenpvp.core.api.config.ConfigurationImplementation.class).registerSetting(plugin, setting);
+    }
+
+    // Pulvinar end
 }
diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
index 7e4f7cb2afbc145e532285c793573ad107bc3033..5cdea21400ef131f6a290b37d5867bc7108636d1 100644
--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
@@ -32,7 +32,7 @@ import org.jetbrains.annotations.Nullable;
  * A ClassLoader for plugins, to allow shared classes across multiple plugins
  */
 @org.jetbrains.annotations.ApiStatus.Internal // Paper
-public final class PluginClassLoader extends URLClassLoader implements io.papermc.paper.plugin.provider.classloader.ConfiguredPluginClassLoader { // Paper
+public final class PluginClassLoader extends URLClassLoader implements io.papermc.paper.plugin.provider.classloader.ConfiguredPluginClassLoader, net.kissenpvp.core.api.base.plugin.KissenPluginClassLoader  { // Paper
     private final JavaPluginLoader loader;
     private final Map<String, Class<?>> classes = new ConcurrentHashMap<String, Class<?>>();
     private final PluginDescriptionFile description;
