From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Encode42 <me@encode42.dev>
Date: Thu, 16 Sep 2021 20:39:45 -0400
Subject: [PATCH] Rebrand to Pulvinar


diff --git a/build.gradle.kts b/build.gradle.kts
index 535b0c6a750cc77fb9340d6e080932f3eb3bde17..0954d58cf28527aa057324cb7890f7b9b1214ed7 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 val alsoShade: Configuration by configurations.creating
 
 dependencies {
-    implementation(project(":purpur-api")) // Pufferfish // Paper // Purpur
+    implementation(project(":pulvinar:pulvinar-api")) // Pufferfish // Paper // Purpur // Pulvinar
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -104,14 +104,14 @@ tasks.jar {
         val gitBranch = git("rev-parse", "--abbrev-ref", "HEAD").getText().trim() // Paper
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Purpur", // Pufferfish // Purpur
+            "Implementation-Title" to "Pulvinar", // Pufferfish // Purpur // Pulvinar
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date, // Paper
-            "Specification-Title" to "Purpur", // Pufferfish // Purpur
+            "Specification-Title" to "Pulvinar", // Pufferfish // Purpur // Pulvinar
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Purpur Team", // Pufferfish // Purpur
-            "Brand-Id" to "purpurmc:purpur", // Pufferfish // Purpur
-            "Brand-Name" to "Purpur", // Pufferfish // Purpur
+            "Specification-Vendor" to "KissenPvP Team", /// Pufferfish / Purpur // Pulvinar
+            "Brand-Id" to "kissenpvp:pulvinar", // Pufferfish // Purpur // Pulvinar
+            "Brand-Name" to "Pulvinar", // Pufferfish // Purpur // Pulvinar
             "Build-Number" to (build ?: ""),
             "Build-Time" to Instant.now().toString(),
             "Git-Branch" to gitBranch, // Paper
diff --git a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
index 6d36fc6d8e22d9b68dea3830f6ecc8763184c343..1e9ea86782f82926e9117ca72735a477d67f5600 100644
--- a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
+++ b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
@@ -36,7 +36,7 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static final int DISTANCE_ERROR = -1;
     private static final int DISTANCE_UNKNOWN = -2;
     // Purpur start
-    private static final String DOWNLOAD_PAGE = "https://purpurmc.org/downloads";
+    private static final String DOWNLOAD_PAGE = "https://api.example.com/nonexistent/downloads"; // Pulvinar TODO
     private static int distance = DISTANCE_UNKNOWN; public int distance() { return distance; }
     // Purpur end
 
@@ -52,7 +52,7 @@ public class PaperVersionFetcher implements VersionFetcher {
         if (build.buildNumber().isEmpty() && build.gitCommit().isEmpty()) {
             updateMessage = text("You are running a development version without access to version information", color(0xFF5300));
         } else {
-            updateMessage = getUpdateStatusMessage("PurpurMC/Purpur", build); // Purpur
+            updateMessage = getUpdateStatusMessage("KissenPvP/Kissen", build); // Purpur // Pulvinar
         }
         final @Nullable Component history = this.getHistory();
 
@@ -62,16 +62,18 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static Component getUpdateStatusMessage(final String repo, final ServerBuildInfo build) {
         //int distance = DISTANCE_ERROR; // Purpur - use field
 
+        /* // Pulvinar start
         final OptionalInt buildNumber = build.buildNumber();
         if (buildNumber.isPresent()) {
             distance = fetchDistanceFromSiteApi(build, buildNumber.getAsInt());
         } else {
+        */ // Pulvinar end
             final Optional<String> gitBranch = build.gitBranch();
             final Optional<String> gitCommit = build.gitCommit();
             if (gitBranch.isPresent() && gitCommit.isPresent()) {
                 distance = fetchDistanceFromGitHub(repo, gitBranch.get(), gitCommit.get());
             }
-        }
+        //} // Pulvinar
 
         return switch (distance) {
             case DISTANCE_ERROR -> text("* Error obtaining version information", NamedTextColor.RED); // Purpur
@@ -89,7 +91,7 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static int fetchDistanceFromSiteApi(final ServerBuildInfo build, final int jenkinsBuild) {
         try {
             try (final BufferedReader reader = Resources.asCharSource(
-                URI.create("https://api.purpurmc.org/v2/purpur/" + build.minecraftVersionId()).toURL(), // Purpur
+                URI.create("https://api.example.com/nonexistent/" + build.minecraftVersionId()).toURL(), // Purpur // Pulvinar TODO
                 Charsets.UTF_8
             ).openBufferedStream()) {
                 final JsonObject json = new Gson().fromJson(reader, JsonObject.class);
@@ -97,7 +99,7 @@ public class PaperVersionFetcher implements VersionFetcher {
                 final int latest = json.getAsJsonObject("builds").getAsJsonPrimitive("latest").getAsInt(); // Purpur
                 return latest - jenkinsBuild;
             } catch (final JsonSyntaxException ex) {
-                LOGGER.error("Error parsing json from Purpur's downloads API", ex); // Purpur
+                LOGGER.error("Error parsing json from nonexistent downloads API.", ex); // Purpur // Pulvinar TODO
                 return DISTANCE_ERROR;
             }
         } catch (final IOException e) {
diff --git a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
index 90b3526479320064378f2cde6c2f2b8e48a59ba6..63f1a91422c5f4db7cf39f76c5aab489f620932b 100644
--- a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
+++ b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
@@ -20,7 +20,7 @@ public final class PaperConsole extends SimpleTerminalConsole {
     @Override
     protected LineReader buildReader(LineReaderBuilder builder) {
         builder
-                .appName("Purpur") // Purpur
+                .appName("Pulvinar") // Purpur // Pulvinar
                 .variable(LineReader.HISTORY_FILE, java.nio.file.Paths.get(".console_history"))
                 .completer(new ConsoleCommandCompleter(this.server))
                 .option(LineReader.Option.COMPLETE_IN_WORD, true);
diff --git a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
index 3099c21ee589acf6edff5903a23673adf489024f..ad56fa888a09828816e58f70869f3e30be69ec52 100644
--- a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
+++ b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
@@ -33,6 +33,7 @@ public record ServerBuildInfoImpl(
     private static final String BRAND_PAPER_NAME = "Paper";
     private static final String BRAND_PUFFERFISH_NAME = "Pufferfish"; // Purpur
     private static final String BRAND_PURPUR_NAME = "Purpur"; // Purpur
+    private static final String BRAND_PULVINAR_NAME = "Pulvinar"; // Pulvinar
 
     private static final String BUILD_DEV = "DEV";
 
@@ -44,9 +45,9 @@ public record ServerBuildInfoImpl(
         this(
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_ID)
                 .map(Key::key)
-                .orElse(BRAND_PURPUR_ID), // Purpur
+                .orElse(BRAND_PULVINAR_ID), // Purpur // Pulvinar
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_NAME)
-                .orElse(BRAND_PURPUR_NAME), // Purpur
+                .orElse(BRAND_PULVINAR_NAME), // Purpur // Pulvinar
             SharedConstants.getCurrentVersion().getId(),
             SharedConstants.getCurrentVersion().getName(),
             getManifestAttribute(manifest, ATTRIBUTE_BUILD_NUMBER)
diff --git a/src/main/java/net/minecraft/CrashReport.java b/src/main/java/net/minecraft/CrashReport.java
index 710477ae27ebc5afdf0012ef0867d05efd293c24..d5e382ed3747ad6fad12d1bd887cb62adbd1298e 100644
--- a/src/main/java/net/minecraft/CrashReport.java
+++ b/src/main/java/net/minecraft/CrashReport.java
@@ -32,7 +32,7 @@ public class CrashReport {
     private boolean trackingStackTrace = true;
     private StackTraceElement[] uncategorizedStackTrace = new StackTraceElement[0];
     private final SystemReport systemReport = new SystemReport();
-    private List<String> extraInfo = List.of("", "DO NOT REPORT THIS TO PAPER! REPORT TO PURPUR INSTEAD!", ""); // Purpur - Rebrand
+    private List<String> extraInfo = List.of("", "DO NOT REPORT THIS TO PAPER OR PURPUR! REPORT TO PULVINAR INSTEAD!", ""); // Pulvinar - rebrand
 
     public CrashReport(String message, Throwable cause) {
         io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(cause); // Paper
diff --git a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
index 8f74c2ec5252b6265549589310d742337c91cb2c..0fd35302180fce6c73efd759ffc6829ce3291f21 100644
--- a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
+++ b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
@@ -56,7 +56,7 @@ public class MinecraftServerGui extends JComponent {
             ;
         }
 
-        final JFrame jframe = new JFrame("Purpur Minecraft server"); // Purpur
+        final JFrame jframe = new JFrame("Pulvinar Minecraft server"); // Purpur // Pulvinar
         final MinecraftServerGui servergui = new MinecraftServerGui(server);
 
         jframe.setDefaultCloseOperation(2);
@@ -64,7 +64,7 @@ public class MinecraftServerGui extends JComponent {
         jframe.pack();
         jframe.setLocationRelativeTo((Component) null);
         jframe.setVisible(true);
-        jframe.setName("Purpur Minecraft server"); // Paper - Improve ServerGUI // Purpur
+        jframe.setName("Pulvinar Minecraft server"); // Paper - Improve ServerGUI // Purpur // Pulvinar
 
         // Paper start - Improve ServerGUI
         try {
@@ -76,7 +76,7 @@ public class MinecraftServerGui extends JComponent {
         jframe.addWindowListener(new WindowAdapter() {
             public void windowClosing(WindowEvent windowevent) {
                 if (!servergui.isClosing.getAndSet(true)) {
-                    jframe.setTitle("Purpur Minecraft server - shutting down!"); // Purpur
+                    jframe.setTitle("Pulvinar Minecraft server - shutting down!"); // Purpur // Pulvinar
                     server.halt(true);
                     servergui.runFinalizers();
                 }
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
index 48999a860a3b9ed691691c355beaf3e0674acb95..f9674f464921276724be8bd15918295710fd8804 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
@@ -492,7 +492,7 @@ public class CraftScheduler implements BukkitScheduler {
                 this.parsePending();
             } else {
                 // this.debugTail = this.debugTail.setNext(new CraftAsyncDebugger(currentTick + CraftScheduler.RECENT_TICKS, task.getOwner(), task.getTaskClass())); // Paper
-                task.getOwner().getLogger().log(Level.SEVERE, "Unexpected Async Task in the Sync Scheduler. Report this to Purpur"); // Paper // Purpur
+                task.getOwner().getLogger().log(Level.SEVERE, "Unexpected Async Task in the Sync Scheduler. Report this to Pulvinar"); // Paper // Purpur // Pulvinar
                 // We don't need to parse pending
                 // (async tasks must live with race-conditions if they attempt to cancel between these few lines of code)
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 99597258e8e88cd9e2c901c4ac3ff7faeeabee2b..bb3b699c5b6cb2d419d23a1b139695e93b342001 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/org.purpurmc.purpur/purpur-api/pom.properties"); // Pufferfish // Purpur
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/net.kissenpvp.pulvinar/pulvinar-api/pom.properties"); // Pufferfish // Purpur // Pulvinar
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/java/org/spigotmc/WatchdogThread.java b/src/main/java/org/spigotmc/WatchdogThread.java
index f51cc3de3ca935ef90f7f0e9dd0506b856fc55f3..176de2f6ea02097fd767bce9d3858d3cff93bae8 100644
--- a/src/main/java/org/spigotmc/WatchdogThread.java
+++ b/src/main/java/org/spigotmc/WatchdogThread.java
@@ -155,14 +155,14 @@ public class WatchdogThread extends ca.spottedleaf.moonrise.common.util.TickThre
                 if (isLongTimeout) {
                 // Paper end
                 log.log( Level.SEVERE, "------------------------------" );
-                log.log( Level.SEVERE, "The server has stopped responding! This is (probably) not a Purpur bug." ); // Paper // Purpur
+                log.log( Level.SEVERE, "The server has stopped responding! This is (probably) not a Pulvinar bug." ); // Paper // Purpur // Pulvinar
                 log.log( Level.SEVERE, "If you see a plugin in the Server thread dump below, then please report it to that author" );
                 log.log( Level.SEVERE, "\t *Especially* if it looks like HTTP or MySQL operations are occurring" );
                 log.log( Level.SEVERE, "If you see a world save or edit, then it means you did far more than your server can handle at once" );
                 log.log( Level.SEVERE, "\t If this is the case, consider increasing timeout-time in spigot.yml but note that this will replace the crash with LARGE lag spikes" );
-                log.log( Level.SEVERE, "If you are unsure or still think this is a Purpur bug, please report this to https://github.com/PurpurMC/Purpur/issues" ); // Purpur
+                log.log( Level.SEVERE, "If you are unsure or still think this is a Pulvinar bug, please report this to https://github.com/KissenPvP/Kissen/issues" ); // Purpur // Pulvinar
                 log.log( Level.SEVERE, "Be sure to include ALL relevant console errors and Minecraft crash reports" );
-                log.log( Level.SEVERE, "Purpur version: " + Bukkit.getServer().getVersion() ); // Purpur
+                log.log( Level.SEVERE, "Pulvinar version: " + Bukkit.getServer().getVersion() ); // Purpur // Pulvinar
                 //
                 if ( net.minecraft.world.level.Level.lastPhysicsProblem != null )
                 {
@@ -184,12 +184,12 @@ public class WatchdogThread extends ca.spottedleaf.moonrise.common.util.TickThre
                 // Paper end
                 } else
                 {
-                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO PURPUR - THIS IS NOT A BUG OR A CRASH  - " + Bukkit.getServer().getVersion() + " ---"); // Purpur
+                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO PULVINAR - THIS IS NOT A BUG OR A CRASH  - " + Bukkit.getServer().getVersion() + " ---"); // Purpur // Pulvinar
                     log.log(Level.SEVERE, "The server has not responded for " + (currentTime - lastTick) / 1000 + " seconds! Creating thread dump");
                 }
                 // Paper end - Different message for short timeout
                 log.log( Level.SEVERE, "------------------------------" );
-                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to Purpur!):" ); // Paper // Purpur
+                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to Pulvinar!):" ); // Paper // Purpur // Pulvinar
                 ca.spottedleaf.moonrise.patches.chunk_system.scheduling.ChunkTaskScheduler.dumpAllChunkLoadInfo(MinecraftServer.getServer(), isLongTimeout); // Paper - rewrite chunk system
                 this.dumpTickingInfo(); // Paper - log detailed tick information
                 WatchdogThread.dumpThread( ManagementFactory.getThreadMXBean().getThreadInfo( MinecraftServer.getServer().serverThread.getId(), Integer.MAX_VALUE ), log );
@@ -205,7 +205,7 @@ public class WatchdogThread extends ca.spottedleaf.moonrise.common.util.TickThre
                     WatchdogThread.dumpThread( thread, log );
                 }
                 } else {
-                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO PURPUR - THIS IS NOT A BUG OR A CRASH ---"); // Purpur
+                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO PULVINAR - THIS IS NOT A BUG OR A CRASH ---"); // Purpur // Pulvinar
                 }
 
                 log.log( Level.SEVERE, "------------------------------" );
