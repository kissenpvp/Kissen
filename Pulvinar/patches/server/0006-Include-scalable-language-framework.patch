From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ivo <chniucg@gmail.com>
Date: Sun, 24 Sep 2023 13:28:51 +0200
Subject: [PATCH] Include scalable language framework


diff --git a/src/main/java/io/papermc/paper/plugin/manager/PaperPluginManagerImpl.java b/src/main/java/io/papermc/paper/plugin/manager/PaperPluginManagerImpl.java
index 341bd527b6d5a955f23f22b352d14a4df964b353..4b011884c81b3056ffd509d37021aef584692b3f 100644
--- a/src/main/java/io/papermc/paper/plugin/manager/PaperPluginManagerImpl.java
+++ b/src/main/java/io/papermc/paper/plugin/manager/PaperPluginManagerImpl.java
@@ -254,5 +254,10 @@ public class PaperPluginManagerImpl implements PluginManager, DependencyContext
     public void registerPlayerSetting(@NotNull net.kissenpvp.core.api.user.playersettting.AbstractPlayerSetting<?, ? extends org.bukkit.OfflinePlayer> playerSetting, @NotNull Plugin plugin) {
         org.bukkit.Bukkit.getPulvinar().getImplementation(net.kissenpvp.core.api.user.UserImplementation.class).registerPlayerSetting(plugin, playerSetting);
     }
+
+    @Override
+    public void registerTranslation(@NotNull String key, @NotNull java.text.MessageFormat defaultMessage, @NotNull Plugin plugin) {
+        org.bukkit.Bukkit.getPulvinar().getImplementation(net.kissenpvp.core.api.message.localization.LocalizationImplementation.class).register(plugin, key, defaultMessage);
+    }
     // Pulvinar end
 }
diff --git a/src/main/java/net/kissenpvp/pulvinar/base/PulvinarCore.java b/src/main/java/net/kissenpvp/pulvinar/base/PulvinarCore.java
index 2bdd4e9ff1b7ebf5c820c17010c663dccd314c39..04d77fd9c819caaed6efa0c60db0b4acdc010ea3 100644
--- a/src/main/java/net/kissenpvp/pulvinar/base/PulvinarCore.java
+++ b/src/main/java/net/kissenpvp/pulvinar/base/PulvinarCore.java
@@ -54,6 +54,7 @@ public class PulvinarCore extends KissenCore implements Pulvinar {
         net.kissenpvp.pulvinar.permission.PulvinarPermissionImplementation permissionImplementation = new net.kissenpvp.pulvinar.permission.PulvinarPermissionImplementation();
         loader.put(net.kissenpvp.pulvinar.api.permission.PermissionImplementation.class, permissionImplementation);
         loader.put(net.kissenpvp.core.permission.InternalPermissionImplementation.class, permissionImplementation);
+        loader.put(net.kissenpvp.core.api.message.localization.LocalizationImplementation.class, new net.kissenpvp.pulvinar.message.localization.PulvinarLocalizationImplementation());
         super.loadImplementations(loader);
     }
 
diff --git a/src/main/java/net/kissenpvp/pulvinar/message/localization/PulvinarLocalizationImplementation.java b/src/main/java/net/kissenpvp/pulvinar/message/localization/PulvinarLocalizationImplementation.java
new file mode 100644
index 0000000000000000000000000000000000000000..af5fbd3c197f257f532cc8fefd7657490c993dc3
--- /dev/null
+++ b/src/main/java/net/kissenpvp/pulvinar/message/localization/PulvinarLocalizationImplementation.java
@@ -0,0 +1,23 @@
+/*
+ * Copyright (C) 2023 KissenPvP
+ *
+ * This program is licensed under the Apache License, Version 2.0.
+ *
+ * This software may be redistributed and/or modified under the terms
+ * of the Apache License as published by the Apache Software Foundation,
+ * either version 2 of the License, or (at your option) any later version.
+ *
+ * This program is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
+ * OR CONDITIONS OF ANY KIND, either express or implied. See the Apache
+ * License, Version 2.0 for the specific language governing permissions
+ * and limitations under the License.
+ *
+ * You should have received a copy of the Apache License, Version 2.0
+ * along with this program. If not, see <http://www.apache.org/licenses/LICENSE-2.0>.
+ */
+
+package net.kissenpvp.pulvinar.message.localization;
+
+import net.kissenpvp.core.message.localization.KissenLocalizationImplementation;
+
+public class PulvinarLocalizationImplementation extends KissenLocalizationImplementation { }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 18141baee317e2a0cab36664fc097cd4a0883609..49d9bd26b04d17cc19bd48defad2b9cb5b778fdd 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2353,6 +2353,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         if (this.language == null || !this.language.equals(clientOptions.language())) { // Paper
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), clientOptions.language());
             this.server.server.getPluginManager().callEvent(event);
+            updateLocale(clientOptions.language()); // Pulvinar
         }
         // CraftBukkit end
         // Paper start - don't call options events on login
@@ -3120,4 +3121,11 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         this.ramBar = ramBar;
     }
     // Purpur end
+
+    // Pulvinar start
+    public void updateLocale(@org.jetbrains.annotations.NotNull String locale)
+    {
+        ((net.kissenpvp.core.user.KissenPublicUser<?>) getBukkitEntity().getUser()).updateLocale(locale);
+    }
+    // Pulvinar end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index f634554385ea5046ff8129a16615d1fac409bea6..ddcc0f65d2f6f00bd002b54e97e758c325049b01 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3371,7 +3371,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     @Override
     public void openBook(final net.kyori.adventure.inventory.Book book) {
-        final java.util.Locale locale = this.getHandle().adventure$locale;
+        final java.util.Locale locale = getCurrentLocale(); //this.getHandle().adventure$locale; // Pulvinar
         final net.minecraft.world.item.ItemStack item = io.papermc.paper.adventure.PaperAdventure.asItemStack(book, locale);
         final ServerPlayer player = this.getHandle();
         final ServerGamePacketListenerImpl connection = player.connection;
